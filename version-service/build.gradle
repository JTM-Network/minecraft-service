plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.6.10'
    id 'org.springframework.boot' version '2.4.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id "com.palantir.docker" version "0.28.0"
}

group 'com.jtm.version'
version '0.32'

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2020.0.3")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib"
    implementation "org.springframework.boot:spring-boot-starter"
    implementation "org.springframework.boot:spring-boot-starter-webflux"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'

    implementation 'io.sentry:sentry:6.4.0'
    implementation 'com.google.code.gson:gson:2.9.0'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.13.4'
    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    implementation 'commons-io:commons-io:2.11.0'
    implementation 'org.apache.maven:maven-artifact:3.8.5'
    implementation 'com.google.cloud:google-cloud-filestore:1.20.0'
    implementation 'com.google.auth:google-auth-library-oauth2-http:1.3.0'

    runtimeOnly 'org.jetbrains.kotlin:kotlin-reflect:1.7.10'
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    testImplementation 'com.squareup.okhttp3:okhttp:4.10.0'
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.10.0'
    testImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.mockito:mockito-inline:4.7.0'
    testImplementation 'org.mockito.kotlin:mockito-kotlin:4.0.0'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
}

docker {
    name "drennydev/${project.name}:${project.version}"
    tags "latest"
    tag 'DockerHub', "drennydev/${project.name}:${project.version}"
    files tasks.testClasses.outputs, tasks.bootJar.outputs, "build/libs/${bootJar.archiveFileName.get()}"
    buildArgs([JAR_FILE: bootJar.archiveFileName.get()])
}
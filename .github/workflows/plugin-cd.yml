name: Plugin Service CI/CD

on:
  pull_request:
    branches: [ 'main' ]
    types:
      - closed
    paths:
      - plugin-service/**
    
env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: main-1
  GKE_ZONE: europe-west1-b
  IMAGE: plugin
  NAME: plugin
  FOLDER: plugin-service

jobs:
  build:
    name: Gradle build
    if: github.event.pull_request.merged
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: JDK 16 Set up
      uses: actions/setup-java@v1
      with:
        java-version: 16
    
    - name: Grant execute permissions for gradlew
      run: |
        cd $FOLDER
        chmod +x gradlew
    
    - name: Cache gradle packages
      uses: actions/cache@v2
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    
    - name: Gradle build
      run: |
        cd $FOLDER
        ./gradlew build
        
    - name: Cleanup Gradle cache
      run: |
        rm -f ~/.gradle/caches/modules-2/modules-2.lock
        rm -f ~/.gradle/caches/modules-2/gc.properties
        
  publish:
      name: Publish to Docker
      runs-on: ubuntu-latest
      needs: [build]
      
      steps:
      - uses: actions/checkout@v2
      
      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Publish image
        run: |-
          cd $FOLDER
          ./gradlew dockerTagsPush
        
  deploy:
    name: Rollout restart to Kubernetes
    runs-on: ubuntu-latest
    needs: [publish]
    
    steps:
    - uses: actions/checkout@v2

    - uses: google-github-actions/get-gke-credentials@v0.2.1
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
        credentials: ${{ secrets.GKE_SA_KEY }}

    - name: Rollout restart command
      run: |-
        kubectl rollout restart deployment/$NAME
